stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: docker
  tags:
    - next
  variables:
    NPROC: "8"
    IMG_TAG: "next"
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  after_script:
    - docker stop release-static
  script:
    - docker build --squash --cache-from $CI_REGISTRY_IMAGE:$IMG_TAG -t $CI_REGISTRY_IMAGE:$IMG_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMG_TAG
    - docker run --name=release-static -d $CI_REGISTRY_IMAGE:$IMG_TAG
    - docker cp release-static:/home/lthn/bin/chain $CI_PROJECT_DIR/artifacts
  artifacts:
    name: Linux 64
    paths:
      - artifacts/*
  rules:
    - changes:
        - "Dockerfile"
        - "chain/**/*"


test:
  image: python:3.8-buster
  before_script:
    - pip install -r requirements.txt
  stage: test
  script:
  - mkdocs build --strict --verbose --site-dir test
  artifacts:
    paths:
    - test

pages:
  image: python:3.8-buster
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - ".cache/pip"
      - "venv/"
  before_script:
    - python -V               # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install git+https://$protected_material_token@github.com/squidfunk/mkdocs-material-insiders.git
  stage: deploy
  script:
    - mkdocs build --strict --verbose
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == 'next'
      changes:
        - "docs/**/*"
        - "requirements.txt"
        - "mkdocs.yml"
